import Engine from './core/Engine';
import Display from './core/Display';
import Resource from './core/Resource';
import Game from './core/Game';

import Player from './assets/Player';
import Enemy from './assets/Enemy';

import worldImage from '../images/world.png';
import enemyImage from '../images/enemy.png';
import playerImage from '../images/player.png';

export default async () => {
  await Resource.preloadImages([
    { src: worldImage, name: 'worldSpritesheet' },
    { src: enemyImage, name: 'enemySpritesheet' },
    { src: playerImage, name: 'playerSpritesheet' },
  ]);

  // resources
  const playerSpritesheet = Resource.getImage('playerSpritesheet');
  const enemySpritesheet = Resource.getImage('enemySpritesheet');
  const worldSpritesheet = Resource.getImage('worldSpritesheet');

  const gameConfig = {
    // display
    display: {
      id: 'canvas',
      width: 832,
      height: 640,
    },

    // camera
    camera: true,

    // player
    player: {
      type: Player,
      config: {
        name: 'player',
        solid: true,
        position: { x: 0, y: 0 },
        graphics: {
          spritesheet: playerSpritesheet,
          columns: 1,
          rows: 1,
        },
        controller: [
          { code: 'KeyW', action: 'up' },
          { code: 'KeyS', action: 'down' },
          { code: 'KeyA', action: 'right' },
          { code: 'KeyD', action: 'left' },
        ],
      },
    },

    // level
    level: {
      unit: 32,
      rows: 20,
      columns: 78,
      worldLayer: {
        columns: 78,
        rows: 20,
        unit: 32,
        grid: [
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '...............11111111111.......................111...111....................',
          '...............13333333331....................................................',
          '...............1.........111111111111111111111..............................31',
          '......1111111111.........333333333333333333333..............................31',
          '...1111111111111............................................................31',
          '111111111111111111111111111111111111111111111111111111111111111111111111111111',
        ],
        graphics: {
          spritesheet: worldSpritesheet,
          columns: 2,
          rows: 2,
        },
        tiles: [
          {
            solid: false,
            symbol: '1',
            spriteSheet: {
              column: 1,
              row: 0,
            },
          },
          // {
          //   solid: false,
          //   symbol: '2',
          //   spriteSheet: {
          //     column: 1,
          //     row: 0,
          //   },
          // },
          {
            solid: true,
            symbol: '3',
            spriteSheet: {
              column: 0,
              row: 1,
            },
          },
        ],
      },
      entityLayer: {
        grid: [
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
          '..............................................................................',
        ],
        actors: [
          {
            symbol: 1,
            type: Enemy,
            config: {
              name: 'enemy',
              solid: true,
              position: { x: 0, y: 0 },
              graphics: {
                spritesheet: enemySpritesheet,
                columns: 1,
                rows: 1,
              },
            },
          },
        ],
      },

      collisionMap: 0,
    },
  };

  const game = new Game(gameConfig);

  // game loop
  const gameLoop = new Engine(
    function update(elapsedTime) {
      game.update(elapsedTime);
    },
    function render() {
      game.draw();
    }
  );
  gameLoop.start();
};
